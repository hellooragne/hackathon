import socket, os, time
import subprocess
  
address = ('127.0.0.1', 8000)  
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)  
s.bind(address)  
  
while True:  
    data, addr = s.recvfrom(2048)  
    if not data:  
        print "client has exist"  
        break  
    print "received:", data, "from", addr  

    time.sleep(2)



""" 
    os.popen("ffmpeg -f mulaw -ar 8000 -ac 1 -i /home/hackathon/source/hackathon/record/" + data + "-in.PCMU -ar 8000 -ac 1 /home/hackathon/source/hackathon/record/" + data +"-in.wav > /dev/null")
    os.popen("ffmpeg -f mulaw -ar 8000 -ac 1 -i /home/hackathon/source/hackathon/record/" + data + "-out.PCMU -ar 8000 -ac 1 /home/hackathon/source/hackathon/record/" + data +"-out.wav > /dev/null")
    
    os.popen("ffmpeg -i /home/hackathon/source/hackathon/record/" + data + ".wav -f s16le -ar 8000 -acodec pcm_s16le /home/hackathon/source/hackathon/record/" + data + ".pcm > /dev/null")
    os.popen("ffmpeg -i /home/hackathon/source/hackathon/record/" + data + "-in.wav -f s16le -ar 8000 -acodec pcm_s16le /home/hackathon/source/hackathon/record/" + data + "-in.pcm > /dev/null")
    os.popen("ffmpeg -i /home/hackathon/source/hackathon/record/" + data + "-out.wav -f s16le -ar 8000 -acodec pcm_s16le /home/hackathon/source/hackathon/record/" + data + "-out.pcm > /dev/null")
"""

    p =subprocess.Popen('ffmpeg -f mulaw -ar 8000 -ac 1 -i /home/hackathon/source/hackathon/record/'+data+'-in.PCMU -ar 8000 -ac 1 /home/hackathon/source/hackathon/record/'+data+'-in.wav', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    p =subprocess.Popen('ffmpeg -f mulaw -ar 8000 -ac 1 -i /home/hackathon/source/hackathon/record/' + data + '-out.PCMU -ar 8000 -ac 1 /home/hackathon/source/hackathon/record/' + data +'-out.wav', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    p =subprocess.Popen('ffmpeg -i /home/hackathon/source/hackathon/record/' + data + '.wav -f s16le -ar 8000 -acodec pcm_s16le /home/hackathon/source/hackathon/record/' + data + '.pcm', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    p =subprocess.Popen('ffmpeg -i /home/hackathon/source/hackathon/record/' + data + '-in.wav -f s16le -ar 8000 -acodec pcm_s16le /home/hackathon/source/hackathon/record/' + data + '-in.pcm', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    p =subprocess.Popen('ffmpeg -i /home/hackathon/source/hackathon/record/' + data + '-out.wav -f s16le -ar 8000 -acodec pcm_s16le /home/hackathon/source/hackathon/record/' + data + '-out.pcm', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)

    print "python /home/hackathon/source/hackathon/recognition/baidu.py  /home/hackathon/source/hackathon/record/" + data +".wav"
    str1 = os.popen("python /home/hackathon/source/hackathon/recognition/baidu.py  /home/hackathon/source/hackathon/record/" + data +".wav").read()
    print str1

    str2 = os.popen("python /home/hackathon/source/hackathon/recognition/baidu.py  /home/hackathon/source/hackathon/record/" + data +"-in.wav").read()
    print str2
  
    str3 = os.popen("python /home/hackathon/source/hackathon/recognition/baidu.py  /home/hackathon/source/hackathon/record/" + data +"-out.wav").read()
    print str3


    p =subprocess.Popen('sample v2.hivoice.cn 80 /home/hackathon/source/hackathon/record/' + data + '.pcm ./result.txt', shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    print p.stderr.readline()

    #str1 = os.popen("sample v2.hivoice.cn 80 /home/hackathon/source/hackathon/record/" + data + ".pcm ./result.txt").read()
    #print str1[96:]

    str2 = os.popen("sample v2.hivoice.cn 80 /home/hackathon/source/hackathon/record/" + data + "-in.pcm ./result.txt").read()
    #print str2[96:]

    str3 = os.popen("sample v2.hivoice.cn 80 /home/hackathon/source/hackathon/record/" + data + "-out.pcm ./result.txt").read()
    #print str3[96:]
  
s.close() 
